{"version":3,"sources":["logo.svg","RecipeList.js","Recipe.js","App.js","reportWebVitals.js","index.js"],"names":["RecipeList","useState","recipe","setRecipe","useEffect","window","fetch","method","headers","Authorization","body","JSON","stringify","query","then","response","json","data","errors","console","error","receipeCollection","items","className","map","r","to","sys","id","name","Recipe","recipeId","useParams","receipe","log","src","picture","url","documentToReactComponents","ingredients","instructions","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gNAAe,I,kCC0DAA,MA1Cf,WACI,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAeC,EAAf,KAwBE,OAtBFC,qBAAU,WACNC,OACGC,MADH,iEAC2E,CACvEC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAEhBC,cAAe,sDAGjBC,KAAMC,KAAKC,UAAU,CAAEC,MAvBvB,+HAyBDC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAuB,IAApBG,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACTA,GACFC,QAAQC,MAAMF,GAIhBf,EAAUc,EAAKI,kBAAkBC,YAEpC,IACEpB,EAIP,8BACI,oBAAIqB,UAAU,cAAd,SAEGrB,EAAOsB,KAAI,SAACC,GACV,OAAQ,6BACN,cAAC,IAAD,CAAMC,GAAE,kBAAaD,EAAEE,IAAIC,IAA3B,SAAkCH,EAAEI,QADrBJ,EAAEE,IAAIC,WAPtB,W,QCuBCE,MA7Df,WACE,IAAMC,EAAaC,cAAbD,SAEN,EAA4B9B,mBAAS,MAArC,mBAAOC,EAAP,KAAeC,EAAf,KAqCA,OAnCAC,qBAAU,WACR,IAAMS,EAAK,gDAEYkB,EAFZ,yMAYX1B,OACGC,MADH,iEAC2E,CACvEC,OAAQ,OACRC,QAAS,CACP,eAAgB,mBAEhBC,cAAe,sDAGjBC,KAAMC,KAAKC,UAAU,CAAEC,YAExBC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,YAAuB,IAApBG,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACTA,GACFC,QAAQC,MAAMF,GAIhBf,EAAUc,EAAKgB,SACfd,QAAQe,IAAIjB,QAEf,IACEf,EAKH,sBAAKqB,UAAU,YAAf,UACE,6BAAKrB,EAAO2B,OACZ,qBAAKN,UAAU,YAAWY,IAAKjC,EAAOkC,QAAQC,MAC9C,gCACA,6CACCC,oCAA0BpC,EAAOqC,YAAYvB,SAE9C,mBAAGO,UAAU,eAAb,SAA6BrB,EAAOsC,eACpC,yBAAQjB,UAAU,SAAlB,UACE,8BAAK,oDACL,yFAdG,WChBIkB,MAhBf,WAEE,OACE,eAAC,IAAD,WACA,qBAAKlB,UAAU,MAAf,SACI,oBAAIA,UAAU,SAAd,kCAEJ,eAAC,IAAD,WACE,cAAC,IAAD,CAAOmB,OAAK,EAACC,KAAK,IAAlB,SAAsB,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOA,KAAK,oBAAZ,SAAgC,cAAC,EAAD,aCVvBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhC,MAAK,YAAkD,IAA/CiC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.94610f32.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { useState, useEffect} from 'react';\r\nimport {\r\n  Link,\r\n} from \"react-router-dom\";\r\n\r\n\r\nconst query=`\r\n{receipeCollection{items{\r\n  sys {id}\r\n  name,\r\n  instructions,\r\n  course,\r\n  picture {url},\r\n  ingredients{json}\r\n}}}`\r\n\r\nfunction RecipeList(){\r\n    const [recipe, setRecipe]=useState(null)\r\n\r\n    useEffect(() => {\r\n        window\r\n          .fetch(`https://graphql.contentful.com/content/v1/spaces/ol9s80ljg83u/`, {\r\n            method: \"POST\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              // Authenticate the request\r\n              Authorization: \"Bearer 6DE_q2O6hOkSWOrOL7qZAEDHlcSHWDvL0PsiSbcuzPM\",\r\n            },\r\n            // send the GraphQL query\r\n            body: JSON.stringify({ query }),\r\n          })\r\n          .then((response) => response.json())\r\n          .then(({ data, errors }) => {\r\n            if (errors) {\r\n              console.error(errors);\r\n            }\r\n    \r\n            // rerender the entire component with new data\r\n            setRecipe(data.receipeCollection.items);\r\n          });\r\n      }, []);\r\n      if (!recipe){\r\n        return'Loading'\r\n      }\r\nreturn(\r\n    <div>\r\n        <ul className=\"ingredients\">\r\n          {\r\n           recipe.map((r) => {\r\n             return( <li key={r.sys.id}>\r\n               <Link to={`/recipe/${r.sys.id}`}>{r.name}</Link></li>\r\n               )}) \r\n          }\r\n        </ul>\r\n      </div>\r\n)\r\n}\r\n\r\nexport default RecipeList","import { useParams } from \"react-router-dom\";\r\nimport { useState, useEffect, setPage } from \"react\";\r\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\r\n\r\nfunction Recipe() {\r\n  let { recipeId } = useParams();\r\n\r\n  const [recipe, setRecipe] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const query = `\r\n        {\r\n            receipe(id: \"${recipeId}\"){\r\n              sys{id}\r\n              name\r\n              course\r\n              instructions\r\n              picture {url}\r\n              ingredients {json}\r\n            }\r\n          }\r\n        `;\r\n    window\r\n      .fetch(`https://graphql.contentful.com/content/v1/spaces/ol9s80ljg83u/`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          // Authenticate the request\r\n          Authorization: \"Bearer 6DE_q2O6hOkSWOrOL7qZAEDHlcSHWDvL0PsiSbcuzPM\",\r\n        },\r\n        // send the GraphQL query\r\n        body: JSON.stringify({ query }),\r\n      })\r\n      .then((response) => response.json())\r\n      .then(({ data, errors }) => {\r\n        if (errors) {\r\n          console.error(errors);\r\n        }\r\n\r\n        // rerender the entire component with new data\r\n        setRecipe(data.receipe);\r\n        console.log(data);\r\n      });\r\n  }, []);\r\n  if (!recipe) {\r\n    return \"Loading\";\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h2>{recipe.name}</h2>\r\n      <img className=\"recipeImg\"src={recipe.picture.url} />\r\n      <div>\r\n      <h2>Ingredients</h2>\r\n      {documentToReactComponents(recipe.ingredients.json)}\r\n      </div>\r\n      <p className=\"instructions\">{recipe.instructions}</p>\r\n      <footer className=\"footer\">\r\n        <div><strong>HARE Kitchen</strong></div>\r\n        <div>Copyright Â©HARE Kitchen. All Rights Reserved.</div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Recipe;\r\n","import logo from './logo.svg';\nimport './App.css';\nimport { useState, useEffect} from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams\n} from \"react-router-dom\";\nimport RecipeList from './RecipeList';\nimport Recipe from './Recipe';\n\nfunction App() {\n  \n  return (\n    <Router>\n    <div className=\"App\">\n        <h1 className=\"header\">My Pocket Cookbook</h1>\n    </div>\n    <Switch>\n      <Route exact path=\"/\"><RecipeList/></Route>\n      <Route path=\"/recipe/:recipeId\"><Recipe/></Route>\n    </Switch>\n    </Router>\n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}